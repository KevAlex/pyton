class Componente:
    def __init__(self,name,conditions):
        self.name = name
        self.conditions = conditions
        self.next = None
    def setNext(self, next):
        self.next = next
    def procesamiento(self, condition,message):
        if condition in self.conditions:
            print("procesamiento del mensaje %s por " %
                  (message, self.name))
         if self.next is not None:
             self.next.procesamiento(condition, message)
             print("el movil se mueve a la der")


import abc
class Solicitud(metaclass=abc.ABCMeta):
             @abc.abstractmethod
             def ejecutar(self):
                 return


class IzquierdaSolicitud(Solicitud):
    def __init__(self, movil):
        self.movil = movil
    def ejecutar(self):
        self.movil.desplazarIzquierda()



class DerechaSolicitud(Solicitud):
    def __init__(self, movil):
        self.movil = movil

    def ejecutar(self):
        self.movil.desplazarDerecha()



class Controlador:
    def __init__(self, sI, sD):
        self.solicitudIzquierda = sI
        self.solicitudDerecha = sD

    def ordenIzquierda(self):
        self.solicitudIzquierda.ejecutar()
    def ordenDerecha(self):
        self.solicitudDerecha.ejecutar()


#movil = Movil()
solizq= IzquierdaSolicitud(movil)
solder = DerechaSolicitud(movil)

controlador = Controlador(solder, solizq)
controlador.ordenIzquierda()
controlador.ordenDerecha()

